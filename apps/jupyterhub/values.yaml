jupyterhub:
  hub:
    db:
      pvc:
        storage: 50Gi
        storageClassName: gp2

  proxy:
    https:
      enabled: false
      type: offload
    service:
      type: ClusterIP
    chp:
      tolerations:
        - key: "experiment-name"
          operator: "Equal"
          value: all-default
          effect: "NoSchedule"

  singleuser:
    startTimeout: 1200
    profileList:
      - display_name: Data Engineering
        description: "PySpark Notebooks"
        profile_options:
          image:
            display_name: "Image"
            choices:
              pyspark350:
                display_name: "PySpark 3.5.0 + Python 3.11"
                default: true
                kubespawner_override:
                  image: jupyter/pyspark-notebook:spark-3.5.0
              pyspark341:
                display_name: "PySpark 3.4.1 + Python 3.11"
                kubespawner_override:
                  image: jupyter/pyspark-notebook:spark-3.4.1
        kubespawner_override:
          tolerations:
            - key: "experiment-name"
              operator: "Equal"
              value: all-default
              effect: "NoSchedule"
          cpu_guarantee: 2
          mem_guarantee: 8G
          cpu_limit: 4
          mem_limit: 8G
        cmd: null
    storage:
      type: "static"
      static:
        pvcName: all-default
        subPath: "home/{username}"
      extraVolumes:
      - name: jupyterhub-shared
        persistentVolumeClaim:
          claimName: all-default
      extraVolumeMounts:
      - name: jupyterhub-shared
        mountPath: /home/data
        readOnly: false
    serviceAccountName: all-default
    extraPodConfig:
      securityContext:
          fsGroup: 100
    extraEnv:
      GRANT_SUDO: "yes"
      NOTEBOOK_ARGS: "--allow-root"
      CHOWN_HOME: "yes"
      CHOWN_HOME_OPTS: "-R"
      CHOWN_EXTRA: "/home/shared"
    uid: 0
    fsGid: 0
    cmd: null

  # Optimizations configured according to this doc https://z2jh.jupyter.org/en/latest/administrator/optimization.html
#  scheduling:
#    userScheduler:
#      enabled: true
#    podPriority:
#      enabled: true
#    userPlaceholder:
#      enabled: false
#      replicas: 1
#    userPods:
#      nodeAffinity:
#        matchNodePurpose: require # This will force single-user pods to use an specific karpenter provisioner

  prePuller:
    hook:
      enabled: false
    continuous:
      # NOTE: if used with Karpenter, also add user-placeholders
      enabled: false

  global:
    safeToShowValues: false